F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\java\com\sgk\gles_texture_two_shape\GLESView.java:563: Warning: The indentation string here is different from on the previous line (" " vs \t) [SuspiciousIndentation]
     GLES32.glEnable(GLES32.GL_TEXTURE_2D);
~~~~~
    F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\java\com\sgk\gles_texture_two_shape\GLESView.java:560: Previous line indentation here

   Explanation for issues of type "SuspiciousIndentation":
   This check looks for cases where the indentation suggests a grouping that
   isn't actually there in the code. A common example of this would be
   something like
   if (column > width)
       line++
       column = 0
   Here, the column = 0 line will be executed every single time, not just if
   the condition is true.

   Available options:

   **always-run** (default is false):
   Whether this check should be included while editing.

   While you're editing, it's common to have a temporary situation where you have suspicious indentation scenarios -- e.g. you start typing an `if` statement on the line above something you want to make conditional, and you haven't indented it yet. It can be distracting and misleading to suddenly have both statements light up as errors. Therefore, lint will avoid including this check when running on the fly in the editor, unless it looks like the file has not been recently edited. With this option, you can turn it on in all cases.

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="SuspiciousIndentation">
           <option name="always-run" value="false" />
       </issue>
   </lint>
   ```

F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\build.gradle:33: Warning: A newer version of androidx.appcompat:appcompat than 1.6.0 is available: 1.6.1 [GradleDependency]
    implementation 'androidx.appcompat:appcompat:1.6.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\build.gradle:34: Warning: A newer version of com.google.android.material:material than 1.7.0 is available: 1.12.0 [GradleDependency]
    implementation 'com.google.android.material:material:1.7.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\drawable-v24: Warning: This folder configuration (v24) is unnecessary; minSdkVersion is 24. Merge all the resources in this folder into drawable. [ObsoleteSdkInt]

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-anydpi-v26\ic_launcher.xml:2: Warning: The resource R.mipmap.ic_launcher appears to be unused [UnusedResources]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\drawable\ic_launcher_background.xml:2: Warning: The resource R.drawable.ic_launcher_background appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\drawable-v24\ic_launcher_foreground.xml:1: Warning: The resource R.drawable.ic_launcher_foreground appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-anydpi-v26\ic_launcher_round.xml:2: Warning: The resource R.mipmap.ic_launcher_round appears to be unused [UnusedResources]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-hdpi\my_icon.png: Warning: The resource R.mipmap.my_icon appears to be unused [UnusedResources]

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-hdpi\my_icon_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-mdpi\my_icon_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-xhdpi\my_icon_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-xxhdpi\my_icon_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-xxxhdpi\my_icon_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]

   Explanation for issues of type "IconLauncherShape":
   According to the Android Design Guide
   (https://material.io/design/iconography/) your launcher icons should "use a
   distinct silhouette", a "three-dimensional, front view, with a slight
   perspective as if viewed from above, so that users perceive some depth."

   The unique silhouette implies that your launcher icon should not be a
   filled square.

F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-xxxhdpi\my_icon.png: Warning: The image my_icon.png varies significantly in its density-independent (dip) size across the various density versions: mipmap-hdpimy_icon.png: 48x48 dp (72x72 px), mipmap-mdpimy_icon.png: 72x72 dp (72x72 px), mipmap-xhdpimy_icon.png: 36x36 dp (72x72 px), mipmap-xxhdpimy_icon.png: 24x24 dp (72x72 px), mipmap-xxxhdpimy_icon.png: 18x18 dp (72x72 px) [IconDipSize]
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-xxxhdpi\my_icon_round.png: Warning: The image my_icon_round.png varies significantly in its density-independent (dip) size across the various density versions: mipmap-hdpimy_icon_round.png: 44x44 dp (66x66 px), mipmap-mdpimy_icon_round.png: 66x66 dp (66x66 px), mipmap-xhdpimy_icon_round.png: 33x33 dp (66x66 px), mipmap-xxhdpimy_icon_round.png: 22x22 dp (66x66 px), mipmap-xxxhdpimy_icon_round.png: 17x17 dp (66x66 px) [IconDipSize]

   Explanation for issues of type "IconDipSize":
   Checks the all icons which are provided in multiple densities, all compute
   to roughly the same density-independent pixel (dip) size. This catches
   errors where images are either placed in the wrong folder, or icons are
   changed to new sizes but some folders are forgotten.

F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-xxxhdpi\my_icon.png: Warning: The my_icon.png icon has identical contents in the following configuration folders: mipmap-hdpi, mipmap-mdpi, mipmap-xhdpi, mipmap-xxhdpi, mipmap-xxxhdpi [IconDuplicatesConfig]
F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\res\mipmap-xxxhdpi\my_icon_round.png: Warning: The my_icon_round.png icon has identical contents in the following configuration folders: mipmap-hdpi, mipmap-mdpi, mipmap-xhdpi, mipmap-xxhdpi, mipmap-xxxhdpi [IconDuplicatesConfig]

   Explanation for issues of type "IconDuplicatesConfig":
   If an icon is provided under different configuration parameters such as
   drawable-hdpi or -v11, they should typically be different. This detector
   catches cases where the same icon is provided in different configuration
   folder which is usually not intentional.

F:\MyRTRProject\MyAndroid\16-Texture\02-3DTexture\02-TwoShape\app\src\main\java\com\sgk\gles_texture_two_shape\GLESView.java:103: Warning: Custom view GLESView overrides onTouchEvent but not performClick [ClickableViewAccessibility]
    public boolean onTouchEvent(MotionEvent e)
                   ~~~~~~~~~~~~

   Explanation for issues of type "ClickableViewAccessibility":
   If a View that overrides onTouchEvent or uses an OnTouchListener does not
   also implement performClick and call it when clicks are detected, the View
   may not handle accessibility actions properly. Logic handling the click
   actions should ideally be placed in View#performClick as some accessibility
   services invoke performClick when a click action should occur.

0 errors, 19 warnings
